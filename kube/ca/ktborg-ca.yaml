---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ktborg-ca
  labels:
    app: blockchain
  namespace: dscf
spec:
  replicas: 1
  selector:
    matchLabels:
      name: ktborg-ca
      app: blockchain
  template:
    metadata:
      labels:
        name: ktborg-ca
        app: blockchain
    spec:
      volumes:
      - name: data
        # emptyDir: {}
        persistentVolumeClaim:
          claimName: ktborg-ca-dscf-pvc
      - name: crypto
        secret:
          secretName: ktborg-ca-crypto
      # affinity:
      #   nodeAffinity:
      #     requiredDuringSchedulingIgnoredDuringExecution:
      #       nodeSelectorTerms:
      #       - matchExpressions:
      #         - key: ibm-cloud.kubernetes.io/worker-id
      #           operator: In
      #           values:
      #           - kube-boe4bt5t09sb8c63dq40-sitktbscfcl-default-0000015a
      containers:
      - name: ca
        image: kcskbcnd93.kcs:5000/hyperledger/fabric-ca:1.4.9
        imagePullPolicy: IfNotPresent
        command: ["sh", "-c", "fabric-ca-server start -b admin:adminpw -d"]
        env:
        - name: FABRIC_CA_HOME
          value: /data
        - name: FABRIC_CA_SERVER_CA_NAME
          value: ca
        - name: FABRIC_CA_SERVER_CA_CERTFILE
          value: /crypto/cert.pem
        - name: FABRIC_CA_SERVER_CA_KEYFILE
          value: /crypto/key
        - name: FABRIC_CA_SERVER_TLS_ENABLED
          value: "false"
        ports:
         - containerPort: 7054
           protocol: TCP
        volumeMounts:
        - mountPath: /data
          name: data
        - mountPath: /crypto
          name: crypto
---
apiVersion: v1
kind: Service
metadata:
  name: ktborg-ca
  labels:
    app: blockchain
    run: ktborg-ca
  namespace: dscf
spec:
  type: NodePort
  selector:
    name: ktborg-ca
  ports:
  - protocol: TCP
    nodePort: 31354
    targetPort: 7054
    port: 7054